{"version":3,"file":"static/js/75.32ea079f.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,6GAEIF,EAAAA,EAAAA,IAAA,uCAA0CC,IAF9C,cAEbE,EAFa,yBAGZA,EAASC,MAHG,gCAKnBC,QAAQC,IAAR,MALmB,yDAAH,qDASXC,EAAY,mCAAG,WAAOC,GAAP,gGAEGR,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,kBAAqDO,IAFxD,cAEdL,EAFc,yBAGbA,EAASC,MAHI,gCAKpBC,QAAQC,IAAR,MALoB,yDAAH,sDASZG,EAAe,mCAAG,WAAOC,GAAP,gGAEAV,EAAAA,EAAAA,IAAA,kBAAqBU,EAArB,oBAAmCT,IAFnC,cAEjBE,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDASfK,EAAe,mCAAG,WAAOC,GAAP,gGAEAZ,EAAAA,EAAAA,IAAA,kBAAqBY,EAArB,4BAAiDX,IAFjD,cAEjBE,EAFiB,yBAGhBA,EAASC,KAAKS,MAHE,gCAKvBR,QAAQC,IAAR,MALuB,yDAAH,sDASfQ,EAAe,mCAAG,WAAOF,GAAP,gGAEAZ,EAAAA,EAAAA,IAAA,kBAAqBY,EAArB,4BAAiDX,IAFjD,cAEjBE,EAFiB,yBAGhBA,EAASC,KAAKW,SAHE,gCAKvBV,QAAQC,IAAR,MALuB,yDAAH,qD,mDCjB5B,IAvBe,WACb,OACE,gBACEU,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,UAOE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,2ECvBD,EAA4B,8B,SCEfC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,gBAAKC,UAAWC,EAAhB,SAEQJ,EAAMK,KAAI,SAAAC,GAAI,OAAI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKzB,IAAoB2B,MAAO,CAACC,KAAKR,GAA3D,SACbK,EAAKI,OAD6CJ,EAAKzB,GAA9C,KAK7B,C,iHCwBD,UAjCa,WACX,OAA0B8B,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwB5C,EAAAA,EAAAA,MAFxB,UAGiC,KADvB6C,EAFV,QAGchC,QAAQiC,OAHtB,gBAIMP,EAASM,EAAMhC,SAJrB,4BAMY,IAAIkC,MAAM,2BANtB,yDASIN,EAAS,EAAD,IATZ,yBAWIE,GAAU,GAXd,8EADc,uBAAC,WAAD,wBAedK,EACD,GAAE,KAGD,iBAAKlC,MAAO,CAAEC,QAAS,OAAQkC,cAAe,SAAUC,UAAW,IAAnE,WACE,4CACCV,IAAS,uBAAIA,EAAMW,UACnBT,IAAU,SAAC,IAAD,KACX,SAAC,IAAD,CAAWf,MAAOA,MAGvB,C","sources":["api.js","components/Loader/Loader.js","webpack://react-homework-template/./src/components/MovieList/movie-list.module.css?b0dd","components/MovieList/MovieList.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios'\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst API_KEY = '177f83f5259c7f846e561f4715bd03a4'\n\n\nexport const getTrending = async () => { \n    try {\n        const response = await axios.get(`./trending/movie/day?api_key=${API_KEY}`)\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }    \n}\n\nexport const searchMovies = async (query) => { \n    try {\n        const response = await axios.get(`./search/movie?api_key=${API_KEY}&query=${query}`)\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getMovieDetails = async (id) => { \n    try {\n        const response = await axios.get(`./movie/${id}?api_key=${API_KEY}`)\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getMovieCredits = async (movie_id) => { \n    try {\n        const response = await axios.get(`./movie/${movie_id}/credits?api_key=${API_KEY}`)\n        return response.data.cast\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getMovieReviews = async (movie_id) => { \n    try {\n        const response = await axios.get(`./movie/${movie_id}/reviews?api_key=${API_KEY}`)\n        return response.data.results\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\n\n\n\n","import React from 'react';\nimport { BallTriangle } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"movie-list_movieList__S8Wc8\"};","import { Link, useLocation  } from 'react-router-dom'\nimport css from './movie-list.module.css'\n\nexport const MovieList = ({ items }) => { \n    const location = useLocation();\n\n    return (\n        <div className={css.movieList}>\n            {\n                items.map(item => <Link to={`/movies/${item.id}`} key={item.id} state={{from:location}}>\n                    {item.title}</Link>)\n            }\n        </div>\n    )\n}","import { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../../api';\nimport Loader from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState('');\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    async function getFilms() {\n      try {\n        const films = await getTrending();\n        if (films.results.length !== 0) {\n          setItems(films.results);\n        } else {\n          throw new Error('Sorry, try again later.');\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    getFilms();\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', marginTop: 20 }}>\n      <h1>Trending movies</h1>\n      {error && <p>{error.message}</p>}\n      {loader && <Loader />}\n      <MovieList items={items} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrending","response","data","console","log","searchMovies","query","getMovieDetails","id","getMovieCredits","movie_id","cast","getMovieReviews","results","style","display","justifyContent","alignItems","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","MovieList","items","location","useLocation","className","css","map","item","to","state","from","title","useState","setItems","error","setError","loader","setLoader","useEffect","films","length","Error","getFilms","flexDirection","marginTop","message"],"sourceRoot":""}